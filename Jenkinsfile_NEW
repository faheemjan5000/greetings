pipeline {
    agent any

    environment {
        // Define environment variables for Docker Hub credentials
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-credentials') // Jenkins credential ID for Docker Hub
        DOCKER_IMAGE_NAME = '333991jan/greetingsss' // Replace with your Docker Hub image name
        DOCKER_IMAGE_TAG = 'latest' // Docker image tag
        GIT_REPO_URL = 'https://github.com/faheemjan5000/greetings.git' // Replace with your GitHub repository URL
        GIT_BRANCH = 'main' // Replace with your Git branch
    }

    stages {
        // Stage 0: Clone Project from GitHub
        stage('Clone Project from GitHub') {
            steps {
                script {
                    echo 'Cloning Project from GitHub...'
                    git branch: "${GIT_BRANCH}", url: "${GIT_REPO_URL}" ,credentialsId: 'b0127267-1859-4ce3-8a1c-0fc5b02d6728'
                }
            }
        }

        // Stage 1: Build Maven Project
        stage('Build Maven Project') {
            steps {
                script {
                    echo 'Building Maven Project...'
                    sh 'mvn clean package' // Runs Maven build
                }
            }
        }

        // Stage 2: Create Docker Image
        stage('Create Docker Image') {
            steps {
                script {
                    echo 'Creating Docker Image...'
                    sh """
                       docker build -t 333991jan/greetingsss .
                    """
                }
            }
        }

        // Stage 3: Push Docker Image to Docker Hub
        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    echo 'Logging into Docker Hub...'
                    sh """
                        echo ${DOCKER_HUB_CREDENTIALS_PSW} | docker login -u ${DOCKER_HUB_CREDENTIALS_USR} --password-stdin
                    """

                    echo 'Pushing Docker Image to Docker Hub...'
                    sh """
                        docker push ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}